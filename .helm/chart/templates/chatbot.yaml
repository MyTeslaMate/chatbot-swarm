apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: chatbot
  name: chatbot
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: chatbot
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        io.kompose.service: chatbot
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: app-manager
      nodeSelector:
        kubernetes.io/hostname: myteslamate-prod      
      containers:
        - name: chatbot
          image: "{{ .Values.global.image }}:{{ .Values.global.tag }}"
          envFrom:
            - configMapRef:
                name: chatbot-config
          ports:
            - containerPort: 80
          resources: {}
          volumeMounts:
            - name: kubectl-volume
              mountPath: /root/.kube # Path in the container
      restartPolicy: Always
      volumes:
        - name: kubectl-volume
          secret:
            secretName: chatbot-kubectl-secret
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: chatbot
  name: chatbot
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  selector:
    io.kompose.service: chatbot